# problem15_2

def mod_inverse(a, m):
    for i in range(1, m):
        if (a * i) % m == 1:
            return i
    return None

def affine_decrypt(a, b, word):
    a_inv = mod_inverse(a, 26)
    if a_inv is None:
        raise ValueError(f"No modular inverse for a={a} mod 26")

    word_nums = [(ord(char) - ord('a')) for char in word]


    decrypted_nums = [(a_inv * (num - b)) % 26 for num in word_nums]

    decrypted_word = ''.join([chr(num + ord('a')) for num in decrypted_nums])

    return decrypted_word

# Example usage:
a = 5
b = 2
word = "byp"
print(f" {affine_decrypt(a, b, word)}")
